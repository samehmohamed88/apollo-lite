load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

#cc_binary(
#    name = "read_can_messages",
#    srcs = ["ReadCANMessages.cc"],
#    linkopts = ["-pthread"],
#    deps = [
#        "//nav/can:can_database",
#        "//nav/can:comma_ai_can_interface_boost_buffer",
#        "//nav/can:device_enum_classes",
#        "//nav/can:lib_usb_device",
#        "//nav/can:lib_usb_device_interface",
#        "//nav/can:usb_device",
#        "@boost",
#    ],
#)

#cc_binary(
#    name = "socketcan_read_can_messages",
#    srcs = ["SocketCANReadCANMessages.cc"],
#    linkopts = ["-pthread"],
#    deps = [
#        "//nav/can:buffered_can_client",
#        "//nav/can:can_database",
#        "//nav/can:socket_can_device",
#        "//nav/can:socket_can_inteface_impl",
#        "//nav/can:socket_can_message",
#        "@boost",
#    ],
#)

#cc_binary(
#    name = "send_and_receive_steering_message",
#    srcs = ["SendAndReceieveSteeringCommandCANMessage.cc"],
#    linkopts = ["-pthread"],
#    deps = [
#        "//nav/can:can_database",
#        "//nav/can:comma_ai_can_interface_boost_buffer",
#        "//nav/can:device_enum_classes",
#        "//nav/can:lib_usb_device",
#        "//nav/can:lib_usb_device_interface",
#        "//nav/can:usb_device",
#        "@boost",
#    ],
#)

#cc_binary(
#    name = "socketcan_send_steering_message",
#    srcs = ["SocketCANSendSteeringCommand.cc"],
#    linkopts = ["-pthread"],
#    deps = [
#        "//nav/can:buffered_can_client",
#        "//nav/can:can_database",
#        "//nav/can:socket_can_device",
#        "//nav/can:socket_can_inteface_impl",
#        "//nav/can:socket_can_message",
#        "@boost",
#    ],
#)
